name: Build and Release

on:
  workflow_dispatch:
    inputs:
      build_name:
        description: "Build name"
        default: ""
        required: false
        type: string
      test_build:
        description: "Test build"
        default: false
        required: false
        type: boolean

run-name: ${{ inputs.build_name }}

defaults:
  run:
    shell: bash

jobs:
  # Create windows release file
  windows:
    runs-on: windows-latest

    steps:
    - name: Checkout master and submodules
      uses: actions/checkout@v4
      with:
        submodules: "true"

    - name: Get version number & filename
      run: |
        tp_ver=$(grep "VERSION" "./tinypedal/const.py" | sed 's/\"//g' | sed 's/VERSION = //g')
        echo "app_version=$tp_ver" >> $GITHUB_ENV
        echo "zip_filename=TinyPedal-$tp_ver-windows.zip" >> $GITHUB_ENV

    - name: Set up Python 3.8 environment for Windows build
      uses: actions/setup-python@v5
      with:
        python-version: "3.8"
        architecture: "x64"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install py2exe

    - name: Build Windows executable
      run: |
        python freeze_py2exe.py -c

    - name: ZIP Windows file
      shell: pwsh
      run: |
        Compress-Archive -Path ./dist/TinyPedal -DestinationPath ./$zip_filename

    - name: Check hash sum
      run: |
        echo "SHA256:" $(sha256sum ./$zip_filename)

    - name: Upload release files
      uses: softprops/action-gh-release@v2
      if: ${{ !inputs.test_build }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v$app_version
        files: |
          $zip_filename

  # Create linux release file
  linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout master and submodules
      uses: actions/checkout@v4
      with:
        submodules: "true"

    - name: Get version number & filename
      run: |
        tp_ver=$(grep "VERSION" "./tinypedal/const.py" | sed 's/\"//g' | sed 's/VERSION = //g')
        echo "app_version=$tp_ver" >> $GITHUB_ENV
        echo "zip_filename=TinyPedal-$tp_ver-linux.zip" >> $GITHUB_ENV

    - name: ZIP Linux file
      run: |
        zip -r $zip_filename . -x *.git*

    - name: Check hash sum
      run: |
        echo "SHA256:" $(sha256sum ./$zip_filename)

    - name: Upload release files
      uses: softprops/action-gh-release@v2
      if: ${{ !inputs.test_build }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v$app_version
        files: |
          $zip_filename
