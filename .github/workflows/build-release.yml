name: Build and Release

on:
  workflow_dispatch:
    inputs:
      build_name:
        description: "Build name"
        default: ""
        required: false
        type: string
      test_build:
        description: "Test build"
        default: false
        required: false
        type: boolean

run-name: ${{ inputs.build_name }}

defaults:
  run:
    shell: bash

jobs:
  # Create windows release file
  windows:
    runs-on: windows-latest

    steps:
    - name: Checkout master and submodules
      uses: actions/checkout@v4
      with:
        submodules: "true"

    - name: Get version number
      id: get_ver
      run: |
        tp_ver=$(grep "VERSION" "./tinypedal/const.py" | sed 's/\"//g' | sed 's/VERSION = //g')
        echo "app_ver=$(echo $tp_ver)" >> $GITHUB_OUTPUT

    - name: Set up Python 3.8 environment for Windows build
      uses: actions/setup-python@v5
      with:
        python-version: "3.8"
        architecture: "x64"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install py2exe

    - name: Build Windows executable
      run: |
        python freeze_py2exe.py -c

    - name: ZIP Windows file & print checksum
      shell: pwsh
      run: |
        $file_name="TinyPedal-${{ steps.get_ver.outputs.app_ver }}-windows.zip"
        Compress-Archive -Path ./dist/TinyPedal -DestinationPath ./$file_name
        Get-FileHash ./$file_name | Format-List

    - name: Upload release files
      uses: softprops/action-gh-release@v2
      if: ${{ !inputs.test_build }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v${{ steps.get_ver.outputs.app_ver }}
        files: |
          TinyPedal-${{ steps.get_ver.outputs.app_ver }}-windows.zip

  # Create linux release file
  linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout master and submodules
      uses: actions/checkout@v4
      with:
        submodules: "true"

    - name: Get version number
      id: get_ver
      run: |
        tp_ver=$(grep "VERSION" "./tinypedal/const.py" | sed 's/\"//g' | sed 's/VERSION = //g')
        echo "app_ver=$(echo $tp_ver)" >> $GITHUB_OUTPUT

    - name: ZIP Linux file & print checksum
      run: |
        file_name=TinyPedal-${{ steps.get_ver.outputs.app_ver }}-linux.zip
        zip -r $file_name . -x *.git*
        echo "SHA256:" $(sha256sum ./$file_name)

    - name: Upload release files
      uses: softprops/action-gh-release@v2
      if: ${{ !inputs.test_build }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v${{ steps.get_ver.outputs.app_ver }}
        files: |
          TinyPedal-${{ steps.get_ver.outputs.app_ver }}-linux.zip
